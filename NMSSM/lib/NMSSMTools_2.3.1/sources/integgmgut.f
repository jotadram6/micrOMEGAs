*   Subroutines to integrate the RGEs for the gauge and Yukawa couplings
*   above the messenger scale: the 1-loop coefficients of the gauge beta
*   functions include the contributions from n5 pairs of messengers in
*   5- and 5_bar-representations of SU(5)

	SUBROUTINE 
     C   ODEINTGMGUT(YSTART,NVAR,X1,X2,EPS,DERIVSGMGUT,RKQSGMGUT,IFAIL)

*   Driver subroutine to integrate Ordinary Differential Equations
*   using the Runge-Kutta 5th order method with adaptative step size
*   (from Numerical Recipes)
*   IFAIL=1 stepsize smaller than minimum in ODEINTGMGUT
*   IFAIL=2 too many steps in ODEINTGMGUT
*   IFAIL=3 stepsize underflow in RKQSGMGUT
*   IFAIL=4 max(|dy(i)/dx|*(1+x)/(1+|y(i)|)) > 1/eps^2

	IMPLICIT NONE

	INTEGER NVAR,NMAX,IFAIL,MAXSTP,NSTP,I
	PARAMETER(MAXSTP=10000,NMAX=500)

	DOUBLE PRECISION YSTART(NVAR),Y(NMAX),YSCAL(NMAX)
	DOUBLE PRECISION DYDX(NMAX),X,X1,X2,EPS,TINY
	DOUBLE PRECISION H1,HMIN,H,HDID,HNEXT

	EXTERNAL DERIVSGMGUT,RKQSGMGUT

	IFAIL=0
	TINY=EPS**4
	H1=DSQRT(EPS)*DABS(X2-X1)
	HMIN=EPS**2*DABS(X2-X1)

	X=X1
	H=DSIGN(H1,X2-X1)
	DO I=1,NVAR
	 Y(I)=YSTART(I)
	ENDDO

	DO NSTP=1,MAXSTP

	 CALL DERIVSGMGUT(NVAR,X,Y,DYDX)

	 DO I=1,NVAR
	  IF(DABS(DYDX(I))*(1.D0+X)/(1.D0+DABS(Y(I))).GT.EPS**-2)IFAIL=4
	 ENDDO
	 IF(IFAIL.GT.0)RETURN

	 DO I=1,NVAR
	  YSCAL(I)=DABS(Y(I))+DABS(H*DYDX(I))+TINY
	 ENDDO

	 CALL RKQSGMGUT(Y,DYDX,NVAR,X,X2,H,EPS,YSCAL,
     C	  HDID,HNEXT,DERIVSGMGUT,IFAIL)
	 IF(IFAIL.GT.0)RETURN
	 
	 IF(DABS(Y(2)-5.D0/3.D0*Y(1)).LT.EPS)THEN
	  X2=X
	  DO I=1,NVAR
	   YSTART(I)=Y(I)
	  ENDDO
	  RETURN
	 ENDIF

	 IF(ABS(HNEXT).LT.HMIN)THEN
	  X2=X
	  DO I=1,NVAR
	   YSTART(I)=Y(I)
	  ENDDO
	  IFAIL=1
	  RETURN
	 ENDIF

	 H=HNEXT

	ENDDO

	IFAIL=2

	RETURN
	END


	SUBROUTINE RKQSGMGUT(Y,DYDX,N,X,X2,HTRY,EPS,YSCAL,HDID,
     C    HNEXT,DERIVSGMGUT,IFAIL)

*   Stepper subroutine for ODEINTGMGUT

	IMPLICIT NONE

	INTEGER IFAIL,I,N,NMAX
	PARAMETER(NMAX=500)

	DOUBLE PRECISION EPS,HDID,HNEXT,HTRY,X,X2,DYDX(N),Y(N),YSCAL(N)
	DOUBLE PRECISION ERRMAX,H,HTEMP,XNEW,YERR(NMAX),YTEMP(NMAX)
	DOUBLE PRECISION SAFETY,PGROW,PSHRNK,ERRCON,G,GTEMP

	EXTERNAL DERIVSGMGUT

	SAFETY=.9D0
	PGROW=-.2D0
	PSHRNK=-.25D0
	ERRCON=(5.D0/SAFETY)**(1.D0/PGROW)
	H=HTRY
	G=Y(2)-5.D0/3.D0*Y(1)

1	CALL RKCKGMGUT(Y,DYDX,N,X,H,YTEMP,YERR,DERIVSGMGUT)

	ERRMAX=0.D0
	DO I=1,N
	 ERRMAX=MAX(ERRMAX,DABS(YERR(I)/YSCAL(I)))
	ENDDO
	ERRMAX=ERRMAX/EPS

	IF(ERRMAX.GT.1.D0)THEN
	 HTEMP=SAFETY*H*(ERRMAX**PSHRNK)
	 H=SIGN(MAX(DABS(HTEMP),.1D0*DABS(H)),H)
	 XNEW=X+H
	 IF(XNEW.EQ.X)THEN
	  IFAIL=3
	  RETURN
	 ENDIF
	 GOTO 1
	ENDIF

	GTEMP=YTEMP(2)-5.D0/3.D0*YTEMP(1)
	IF(GTEMP.LT.-EPS)THEN
	 IFAIL=-1
	 X2=X+H
	 H=G/(G-GTEMP)*H
	 GOTO 1
	ENDIF

	HDID=H
	X=X+H
	DO I=1,N
	 Y(I)=YTEMP(I)
	ENDDO

	IF(ERRMAX.GT.ERRCON)THEN
	 HNEXT=SAFETY*H*(ERRMAX**PGROW)
	ELSE
	  HNEXT=5.D0*H
	ENDIF
	
	IF(X+HNEXT.GT.X2 .AND. IFAIL.EQ.-1) HNEXT=X2-X

	RETURN

	END


	SUBROUTINE RKCKGMGUT(Y,DYDX,N,X,H,YOUT,YERR,DERIVSGMGUT)

*   Algorithm subroutine for ODEINTGMGUT

	IMPLICIT NONE

	INTEGER I,N,NMAX
	PARAMETER(NMAX=500)

	DOUBLE PRECISION H,X,DYDX(N),Y(N),YERR(N),YOUT(N)
	DOUBLE PRECISION AK2(NMAX),AK3(NMAX),AK4(NMAX)
	DOUBLE PRECISION AK5(NMAX),AK6(NMAX),YTEMP(NMAX)
	DOUBLE PRECISION A2,A3,A4,A5,A6,C1,C3,C4,C6
	DOUBLE PRECISION B21,B31,B32,B41,B42,B43,B51,B52,B53,B54
	DOUBLE PRECISION B61,B62,B63,B64,B65,DC1,DC3,DC4,DC5,DC6

	PARAMETER(A2=.2D0, A3=.3D0, A4=.6D0, A5=1.D0, A6=.875D0,
     .	 B21=.2D0, B31=3.D0/40.D0, B32=9.D0/40.D0, B41=.3D0, B42=-.9D0,
     .	 B43=1.2D0, B51=-11.D0/54.D0, B52=2.5D0, B53=-70.D0/27.D0,
     .	 B54=35.D0/27.D0, B61=1631.D0/55296.D0, B62=175.D0/512.D0,
     .	 B63=575.D0/13824.D0, B64=44275.D0/110592.D0,
     .	 B65=253.D0/4096.D0, C1=37.D0/378.D0, C3=250.D0/621.D0,
     .	 C4=125.D0/594.D0, C6=512.D0/1771.D0, DC1=C1-2825.D0/27648.D0,
     .	 DC3=C3-18575.D0/48384.D0, DC4=C4-13525.D0/55296.D0,
     .	 DC5=-277.D0/14336.D0, DC6=C6-.25D0)

	EXTERNAL DERIVSGMGUT

	DO I=1,N
	 YTEMP(I)=Y(I)+B21*H*DYDX(I)
	ENDDO
	CALL DERIVSGMGUT(N,X+A2*H,YTEMP,AK2)
	DO I=1,N
	 YTEMP(I)=Y(I)+H*(B31*DYDX(I)+B32*AK2(I))
	ENDDO
	CALL DERIVSGMGUT(N,X+A3*H,YTEMP,AK3)
	DO I=1,N
	 YTEMP(I)=Y(I)+H*(B41*DYDX(I)+B42*AK2(I)+B43*AK3(I))
	ENDDO
	CALL DERIVSGMGUT(N,X+A4*H,YTEMP,AK4)
	DO I=1,N
	 YTEMP(I)=Y(I)+H*(B51*DYDX(I)+B52*AK2(I)+B53*AK3(I)+B54*AK4(I))
	ENDDO
	CALL DERIVSGMGUT(N,X+A5*H,YTEMP,AK5)
	DO I=1,N
	 YTEMP(I)=Y(I)+H*(B61*DYDX(I)+B62*AK2(I)+B63*AK3(I)+B64*AK4(I)+
     .	  B65*AK5(I))
	ENDDO
	CALL DERIVSGMGUT(N,X+A6*H,YTEMP,AK6)
	DO I=1,N
	 YOUT(I)=Y(I)+H*(C1*DYDX(I)+C3*AK3(I)+C4*AK4(I)+C6*AK6(I))
	ENDDO
	DO I=1,N
	 YERR(I)=H*(DC1*DYDX(I)+DC3*AK3(I)+DC4*AK4(I)+DC5*AK5(I)+DC6*
     .	  AK6(I))
	ENDDO

	RETURN
	END


	SUBROUTINE DERIVSGMGUT(N,X,Y,F)

*   2-loop Renormalization group equations for g1, g2, g3,
*   lambda, kappa, htop, hbot, htau to be integrated by ODEINT

	IMPLICIT NONE

	INTEGER N
	DOUBLE PRECISION X,Y(N),F(N),PI,c2
	DOUBLE PRECISION G1,G2,G3,L2,K2,HT2,HB2,HTAU2
	DOUBLE PRECISION MSUSYEFF,MMESS,N5

	COMMON/MESSPAR/MSUSYEFF,MMESS,N5

	PI=4.D0*DATAN(1.D0)
	c2=0.D0 !1.D0/(16.D0*PI**2)

	G1=Y(1)
	G2=Y(2)
	G3=Y(3)
	L2=Y(4)
	K2=Y(5)
	HT2=Y(6)
	HB2=Y(7)
	HTAU2=Y(8)

	F(1)= (N5*5.D0/3.D0+11.D0)*g1**2
     .	    + c2*g1**2*(199.D0/9.D0*g1 + 9.D0*g2 + 88.D0/3.D0*g3
     .	    - 2.D0*L2 - 26.D0/3.D0*HT2 - 14.D0/3.D0*HB2 - 6.D0*HTAU2)

	F(2)= (N5+1.D0)*g2**2
     .	    + c2*g2**2*(3.D0*g1 + 25.D0*g2 + 24.D0*g3
     .	    - 2.D0*L2 - 6.D0*HT2 - 6.D0*HB2 - 2.D0*HTAU2)

	F(3)= (N5-3.D0)*g3**2
     .	    + c2*g3**2*(11.D0/3.D0*g1 + 9.D0*g2 + 14.D0*g3
     .	    - 4 .D0*HT2 - 4.D0*HB2)

	F(4)= L2*(-g1 - 3.D0*g2
     .	    + 4.D0*L2 + 2.D0*K2 + 3.D0*HT2 + 3.D0*HB2 + HTAU2)
     .	    + c2*L2*(L2*(2.D0*g1 + 6.D0*g2
     .	    - 10.D0*L2 - 12.D0*K2 - 9.D0*HT2 - 9.D0*HB2 - 3.D0*HTAU2)
     .	    + 23.D0/2.D0*g1**2 + 15.D0/2.D0*g2**2 + 3.D0*g1*g2
     .	    + 4.D0/3.D0*g1*HT2 - 2.D0/3.D0*g1*HB2 + 2.D0*g1*HTAU2
     .	    + 16.D0*g3*HT2 + 16.D0*g3*HB2 - 3.D0*HTAU2**2
     .	    - 9.D0*HT2**2 - 9.D0*HB2**2 - 6.D0*HT2*HB2 - 8.D0*K2**2)

	F(5)= 6.D0*K2*(L2 + K2)
     .	    + c2*6.D0*K2*(-4.D0*K2**2 + L2*(g1 + 3.D0*g2 
     .	    - 2.D0*L2 - 4.D0*K2 - 3.D0*HT2 - 3.D0*HB2 - HTAU2))

	F(6)= HT2*(-13.D0/9.D0*g1 - 3.D0*g2 - 16.D0/3.D0*g3
     .	    + L2 + 6.D0*HT2 + HB2)
     .	    + c2*HT2*(HT2*(2.D0*g1 + 6.D0*g2 + 16.D0*g3
     .	    - 3.D0*L2 - 22.D0*HT2 - 5.D0*HB2)
     .	    + 2.D0/3.D0*g1*HB2 - 3.D0*L2**2 - 2.D0*L2*K2
     .	    - 4.D0*L2*HB2 - 5.D0*HB2**2 - HB2*HTAU2 - L2*HTAU2
     .	    + 2743.D0/162.D0*g1**2 + 15.D0/2.D0*g2**2- 16.D0/9.D0*g3**2
     .	    + 5.D0/3.D0*g1*g2 + 136.D0/27.D0*g1*g3 + 8.D0*g2*g3)

	F(7)= HB2*(-7.D0/9.D0*g1 - 3.D0*g2 - 16.D0/3.D0*g3
     .	    + L2 + HT2 + 6.D0*HB2 + HTAU2)
     .	    + c2*HB2*(HB2*(2.D0/3.D0*g1 + 6.D0*g2 + 16.D0*g3
     .	    - 3.D0*L2 - 5.D0*HT2 - 22.D0*HB2 - 3.D0*HTAU2)
     .	    + 4.D0/3.D0*g1*HT2 - 3.D0*L2**2 - 2.D0*L2*K2
     .	    - 4.D0*L2*HT2 - 5.D0*HT2**2 - 3.D0*HTAU2**2 + 2.D0*g1*HTAU2
     .	    + 1435.D0/162.D0*g1**2 + 15.D0/2.D0*g2**2 - 16.D0/9.D0*g3**2
     .	    + 5.D0/3.D0*g1*g2 + 40.D0/27.D0*g1*g3 + 8.D0*g2*g3)

	F(8)= HTAU2*(-3.D0*g1 - 3.D0*g2
     .	    + L2 + 3.D0*HB2 + 4.D0*HTAU2)
     .	    + c2*HTAU2*(-10.D0*HTAU2**2 - 9.D0*HTAU2*HB2 - 9.D0*HB2**2
     .	    - 3.D0*HB2*HT2 + HTAU2*(2.D0*G1 + 6.D0*G2)
     .	    + HB2*(-2.D0/3.D0*G1 + 16*G3)
     .	    - L2*(3.D0*HTAU2 + 3.D0*HT2 + 3.D0*L2 + 2.D0*K2)
     .	    + 75.D0/2.D0*G1**2 + 3.D0*G1*G2 + 15.D0/2.D0*G2**2)

	RETURN
	END


